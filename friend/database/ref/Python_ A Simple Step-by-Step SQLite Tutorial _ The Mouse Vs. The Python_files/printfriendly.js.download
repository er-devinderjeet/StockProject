var PF_VERSION = "2017-03-31-133521387", data = document.getElementById("printfriendly-data");

if (data) {
  var pfData = JSON.parse(data.getAttribute("data"));
  pfstyle = pfData.pfstyle, pfOptions = pfData.pfOptions;
}

var pfMod = window.pfMod || function(e, t) {
  var n = e.document, i = n.location.protocol, o = {
    environment: "production",
    disableUI: !1,
    protocol: i,
    dir: "ltr",
    usingBM: !1,
    maxImageWidth: 750,
    filePath: "/assets/versions/",
    hosts: {
      cdn: i + "//cdn.printfriendly.com",
      pf: i + "//app.printfriendly.com",
      ds: "https://www.printfriendly.com",
      ds_cdn: "https://ds-4047.kxcdn.com",
      pdf: i + "//pdf.printfriendly.com",
      email: i + "//app.printfriendly.com",
      page: e.location.host.split(":")[0]
    },
    domains: {
      page: e.location.host.split(":")[0].split("www.").pop()
    }
  }, r = {
    removeEmailsFromUrl: function(e) {
      e = e.split("?")[0];
      for (var t = e.split("/"), n = t.length; n-- > 0; ) -1 !== t[n].indexOf("@") && t.splice(n, 1);
      return t.join("/");
    }
  }, a = {
    isReady: !1,
    readyBound: !1,
    ready: function() {
      if (!a.isReady) {
        if (!document.body) return setTimeout(a.ready, 13);
        a.isReady = !0, a.readyFunc.call();
      }
    },
    doScrollCheck: function() {
      if (!a.isReady) {
        try {
          document.documentElement.doScroll("left");
        } catch (e) {
          return setTimeout(a.doScrollCheck, 50);
        }
        a.detach(), a.ready();
      }
    },
    detach: function() {
      document.addEventListener ? (document.removeEventListener("DOMContentLoaded", a.completed, !1), 
      e.removeEventListener("load", a.completed, !1)) : document.attachEvent && "complete" === document.readyState && (document.detachEvent("onreadystatechange", a.completed), 
      e.detachEvent("onload", a.completed));
    },
    completed: function(e) {
      (document.addEventListener || "load" === e.type || "complete" === document.readyState) && (a.detach(), 
      a.ready());
    },
    bindReady: function() {
      if (!a.readyBound) {
        if (a.readyBound = !0, "complete" === document.readyState) return a.ready();
        if (document.addEventListener) document.addEventListener("DOMContentLoaded", a.completed, !1), 
        e.addEventListener("load", a.completed, !1); else if (document.attachEvent) {
          document.attachEvent("onreadystatechange", a.completed), e.attachEvent("onload", a.completed);
          var t = !1;
          try {
            t = null == e.frameElement && document.documentElement;
          } catch (n) {}
          t && t.doScroll && a.doScrollCheck();
        }
      }
    },
    domReady: function(e) {
      this.readyFunc = e, this.bindReady();
    },
    canonicalize: function(e) {
      if (e) {
        var t = document.createElement("div");
        return t.innerHTML = "<a></a>", t.firstChild.href = e, t.innerHTML = t.innerHTML, 
        t.firstChild.href;
      }
      return e;
    }
  }, s = {
    headerImageUrl: e.pfHeaderImgUrl,
    headerTagline: e.pfHeaderTagline,
    imageDisplayStyle: e.pfImageDisplayStyle,
    customCSSURL: a.canonicalize(e.pfCustomCSS),
    disableClickToDel: e.pfdisableClickToDel,
    disablePDF: e.pfDisablePDF,
    disablePrint: e.pfDisablePrint,
    disableEmail: e.pfDisableEmail,
    hideImages: e.pfHideImages
  }, c = {
    version: PF_VERSION,
    initialized: !1,
    finished: !1,
    onServer: !1,
    hasContent: !1,
    messages: [],
    errors: [],
    adSettings: {
      status: "not-loaded",
      adFree: !0,
      brandFree: !0
    },
    init: function(t) {
      try {
        this.initialized = !0, this.configure(t), this.getAdSettingsFromPFServer(), this.onServerSetup(), 
        this.setVariables(), this.detectBrowser(), this.startIfNecessary(), e.print = this.start;
      } catch (n) {
        d.log(n);
      }
    },
    configure: function(t) {
      if (this.config = o, t) {
        this.config.environment = t.environment || "development";
        for (var n in t.hosts) this.config.hosts[n] = t.hosts[n];
        t.filePath && (this.config.filePath = t.filePath), t.ssLocation && (this.config.ssLocation = t.ssLocation), 
        t.ssStyleSheetHrefs && (this.config.ssStyleSheetHrefs = t.ssStyleSheetHrefs);
      }
      this.userOptions = {
        redirect: {
          disableForiPad: !!this.getVal(e.pfUserOptions, "redirect.disableForiPad")
        }
      };
    },
    getAdSettingsFromPFServer: function() {
      c.adSettings.status = "loading";
      var e = document.createElement("script");
      e.onerror = function() {
        c.adSettings.status = "error";
      }, e.src = c.config.hosts.ds_cdn + "/api/v3/domain_settings/a?callback=pfMod.configureAdSettings&hostname=" + c.config.hosts.page + "&client_version=" + c.version, 
      document.getElementsByTagName("head")[0].appendChild(e);
    },
    configureAdSettings: function(e) {
      try {
        c.adSettings.adFree = e.domain_settings.ad_free, c.adSettings.adType = e.domain_settings.ad_type, 
        c.adSettings.brandFree = e.domain_settings.brand_free, c.adSettings.status = "loaded";
        var t = document.getElementById("pf-core");
        t && t.contentWindow && t.contentWindow.core && t.contentWindow.core.createAds(!0);
      } catch (n) {
        d.log(n);
      }
    },
    getVal: function(e, t) {
      for (var n = t.split("."); "undefined" != typeof e && n.length; ) e = e[n.shift()];
      return e;
    },
    startIfNecessary: function() {
      (e.pfstyle || this.urlHasAutoStartParams()) && this.start();
    },
    urlHasAutoStartParams: function() {
      return -1 !== this.config.urls.page.indexOf("pfstyle=wp");
    },
    start: function() {
      c.isRedirectNecessary() ? c.redirect() : c.supportedSiteType() && a.domReady(function() {
        try {
          c.startTime = new Date().getTime(), c.sanitizeLocation(), c.config.disableUI || c.createMask(), 
          c.loadCore();
        } catch (e) {
          d.log(e);
        }
      });
    },
    sanitizeLocation: function() {
      url = document.location.href.split("?")[0], url = r.removeEmailsFromUrl(url), url !== document.location.href && (history && "function" == typeof history.pushState ? history.pushState({
        pf: "sanitized"
      }, document.title, url) : c.urlHasPII = !0);
    },
    unsanitizeLocation: function() {
      history && history.state && "sanitized" == history.state.pf && history.back();
    },
    onServerSetup: function() {
      e.onServer && (this.onServer = !0, this.config.disableUI = !0);
    },
    setVariables: function() {
      var t = this, n, o = "";
      "production" !== this.config.environment && (o = "?_=" + Math.random());
      var r = t.config.hosts.cdn + t.config.filePath + t.version + "/pf-app/print.css" + o;
      this.config.disableUI && (r = ""), this.config.urls = {
        js: {
          jquery: i + "//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js",
          jqueryBackup: t.config.hosts.cdn + "/javascripts/common/jquery/1.11.0/jquery.min.js",
          core: t.config.hosts.cdn + t.config.filePath + t.version + "/core.js" + o,
          algo: t.config.hosts.cdn + t.config.filePath + t.version + "/algo.js" + o
        },
        css: {
          page: r
        },
        pdfMake: t.config.hosts.pdf + "/pdfs/make",
        email: t.config.hosts.email + "/email/new"
      };
      try {
        n = top.location.href;
      } catch (a) {
        n = e.location.href;
      }
      this.config.urls.page = n, this.userSettings = s, !e.pfstyle || "bk" !== e.pfstyle && "nbk" !== e.pfstyle && "cbk" !== e.pfstyle || (this.config.usingBM = !0);
    },
    detectBrowser: function() {
      this.browser = {};
      var e = navigator.appVersion;
      e && -1 !== e.indexOf("MSIE") ? (this.browser.version = parseFloat(e.split("MSIE")[1]), 
      this.browser.isIE = !0) : this.browser.isIE = !1;
    },
    detectAdBlock: function() {
      c.loadScript("https://key-cdn.printfriendly.com/check-3.2.1.min.js", function() {
        function e(e) {
          var t = new XMLHttpRequest();
          t.open("POST", c.config.hosts.pf + "/stats", !0), t.setRequestHeader("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8"), 
          t.send("event=" + e), "undefined" != typeof fuckAdBlock && fuckAdBlock.clearEvent();
        }
        if ("undefined" == typeof fuckAdBlock) e("adblock.present"); else {
          fuckAdBlock.onDetected(function() {
            e("adblock.present");
          }), fuckAdBlock.onNotDetected(function() {
            e("adblock.absent");
          });
          try {
            fuckAdBlock.check(!0);
          } catch (t) {}
        }
      });
    },
    loadScript: function(e, t) {
      var n = document.getElementsByTagName("head")[0], i = document.createElement("script");
      i.type = "text/javascript", i.src = e, i.onreadystatechange = t, i.onload = t, n.appendChild(i);
    },
    createIframe: function(e) {
      var t = e.createElement("iframe");
      return t.src = "javascript:false", t.frameBorder = "0", t.allowTransparency = "true", 
      t;
    },
    loadHtmlInIframe: function(e, t, n) {
      var i, o;
      try {
        o = t.contentWindow.document;
      } catch (r) {
        i = e.domain, t.src = "javascript:var d=document.open();d.domain='" + i + "';void(0);", 
        o = t.contentWindow.document;
      }
      o.write(n), o.close();
    },
    redirect: function() {
      var e = [ "source=cs", "url=" + encodeURIComponent(top.location.href) ], t;
      for (var n in s) "undefined" != typeof s[n] && e.push(n + "=" + encodeURIComponent(s[n]));
      t = this.config.hosts.pf + "/print/?" + e.join("&"), this.urlHasAutoStartParams() ? top.location.replace(t) : top.location.href = t;
    },
    supportedSiteType: function() {
      return "about:blank" !== c.config.urls.page && ("http:" === c.config.protocol || "https:" === c.config.protocol);
    },
    isRedirectNecessary: function() {
      try {
        var t = navigator.userAgent.match(/Edge\/(\d+.\d+)/);
        return !!(!history || "function" != typeof history.pushState || navigator.userAgent.match(/(ipod|opera.mini|blackberry|playbook|bb10)/i) || this.browser.isIE && this.browser.version < 8 || this.browser.isIE && e.adsbygoogle || "undefined" != typeof $ && $.jcarousel && this.browser.isIE || this.browser.isIE && this.browser.version < 9 && "skinnytaste.com" === this.config.domains.page || t && 2 === t.length && parseFloat(t[1]) < 13.10586);
      } catch (n) {
        return d.log(n), !1;
      }
    },
    createMask: function() {
      var e = document.createElement("div");
      e.innerHTML = '<div id="pf-mask" style="z-index: 2147483627!important; position: fixed !important; top: 0pt !important; left: 0pt !important; background-color: rgb(0, 0, 0) !important; opacity: 0.8 !important;filter:progid:DXImageTransform.Microsoft.Alpha(opacity=80); height: 100% !important; width: 100% !important;"></div>', 
      document.body.appendChild(e.firstChild);
    },
    closePreview: function() {
      a.readyBound = !1, a.isReady = !1, c.unsanitizeLocation();
      var e = document.getElementById("pf-core");
      e.parentElement.removeChild(e);
      var t = document.getElementById("pf-mask");
      t.parentElement.removeChild(t);
      var n = document.getElementById("gaiframe");
      n && n.parentElement.removeChild(n);
    },
    removeDoubleSemiColon: function(e) {
      return e.replace(/;{2}/g, ";");
    },
    loadCore: function() {
      var e = '<!DOCTYPE html><html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><meta name="viewport" content="width=device-width, initial-scale=1"><script src="' + this.config.urls.js.jquery + '"></script><script src="' + this.config.urls.js.core + '"></script><link media="screen" type="text/css" rel="stylesheet" href="' + this.config.urls.css.page + '"></head><body class="cs-core-iframe" onload="core.init();"></body>', t = this.createIframe(document);
      t.id = "pf-core", t.name = "pf-core", document.body.appendChild(t);
      var n = t.style.cssText + ";width: 100% !important;max-width:100% !important;height: 100% !important; display: block !important; overflow: hidden !important; position: absolute !important; top: 0px !important; left: 0px !important; background-color: transparent !important; z-index: 2147483647!important";
      t.style.cssText = this.removeDoubleSemiColon(n), this.loadHtmlInIframe(document, t, e);
    }
  }, d = {
    _window: e.top,
    _doc: e.top.document,
    installInitiated: !1,
    validFile: /d3nekkt1lmmhms|printfriendly\.com|printnicer\.com|algo\.js|printfriendly\.js|core\.js/,
    setVars: function() {
      this._window.frames["pf-core"] && this._window.frames["pf-core"].document && (this._window = this._window.frames["pf-core"], 
      this._doc = this._window.document);
    },
    install: function() {
      if (this.installInitiated) return !0;
      this.installInitiated = !0, this.setVars();
      var e = this._doc.createElement("script"), t = this._doc.getElementsByTagName("script")[0];
      e.src = "//cdn.ravenjs.com/3.2.0/raven.min.js", t.parentNode.appendChild(e), this.wait();
    },
    wait: function() {
      return this._window.Raven ? (this.configure(), void this.pushExistingErrors()) : setTimeout(function() {
        d.wait();
      }, 100);
    },
    configure: function() {
      var e = "https://5463b49718cd4266911eab9e5c0e114d@app.getsentry.com/22091", t = {
        dataCallback: function(e) {
          var t, n;
          try {
            t = e.stacktrace.frames[0], t.filename.match(d.validFile) && "onload" !== t["function"] || e.stacktrace.frames.shift();
          } catch (i) {}
          return e;
        },
        shouldSendCallback: function(e) {
          return !!(e && e.extra && e.extra.file);
        },
        release: c.version
      };
      this._window.Raven.config(e, t).install();
    },
    sendError: function(e, t) {
      t = "undefined" != typeof t ? {
        file: t.file
      } : {
        file: "printfriendly.js"
      }, t.usingBM = c.config.usingBM, t.url = c.config.urls.page, "production" === c.config.environment && this._window.Raven.captureException(e, {
        extra: t
      });
    },
    pushExistingErrors: function() {
      for (var e = 0; e < c.errors.length; e++) this.sendError(c.errors[e].err, c.errors[e].opts);
    },
    log: function(e, t) {
      c.finished = !0, t = t || {
        file: "printfriendly.js"
      };
      try {
        this._window.Raven ? this.sendError(e, t) : (c.errors.push({
          err: e,
          opts: t
        }), this.install(), c.messages.push(e.name + " : " + e.message), c.messages.push(e.stack));
      } catch (n) {}
    }
  };
  return c.exTracker = d, c;
}(window), priFri = pfMod;

"algo" === window.name || "pf-core" === window.name || pfMod.initialized || pfMod.init(window.pfOptions);